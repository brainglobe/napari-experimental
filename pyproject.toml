[project]
name = "napari-experimental"
description = "A place to experiment with core-independent features without breaking core napari"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Alessandro Felder", email = "a.felder@ucl.ac.uk" }]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.9"
dependencies = ["numpy", "napari", "magicgui", "pyqt5", "qtpy", "scikit-image"]
dynamic = ["version"]

[project.entry-points."napari.manifest"]
napari-experimental = "napari_experimental:napari.yaml"

[project.optional-dependencies]
dev = ["tox", "pytest", "pytest-cov", "pytest-qt"]

[project.urls]
"Bug Tracker" = "https://github.com/alessandrofelder/napari-experimental/issues"
"Documentation" = "https://github.com/alessandrofelder/napari-experimental#README.md"
"Source Code" = "https://github.com/alessandrofelder/napari-experimental"
"User Support" = "https://github.com/alessandrofelder/napari-experimental/issues"

[build-system]
requires = ["setuptools>=42.0.0", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["napari_experimental*"]
namespaces = false

[tool.setuptools.package-data]
napari_experimental = ["*.yaml"]

[tool.setuptools_scm]

[tool.black]
line-length = 79
skip-string-normalization = false
target-version = ["py39", "py310", "py311"]

[tool.ruff]
exclude = ["__init__.py", "build", ".eggs"]
line-length = 79
lint.select = ["I", "E", "F", "B"]
target-version = "py311"
fix = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310}-{linux,macos,windows}
isolated_build=true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py3.11

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
platform =
    macos: darwin
    linux: linux
    windows: win32
passenv =
    CI
    GITHUB_ACTIONS
    DISPLAY
    XAUTHORITY
    NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
    PYVISTA_OFF_SCREEN
extras =
    dev
commands = pytest -v --color=yes --cov=napari_experimental --cov-report=xml
"""
